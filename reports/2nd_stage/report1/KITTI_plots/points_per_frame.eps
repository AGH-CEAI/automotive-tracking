%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.10.0 (http://poppler.freedesktop.org)
%%Creator: Matplotlib v3.8.4, https://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 419 311
%%HiResBoundingBox: 0 0 418.89501 310.85575
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_15_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -463 1794 1233] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 20 dict def
CharProcs begin
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
h
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
h
f
Q
} def
/b {
635 0 91 -13 580 760 setcachedevice
q
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
h
181 464 m
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
181 0 l
91 0 l
91 760 l
181 760 l
181 464 l
h
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
h
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
h
f
Q
} def
/f {
352 0 23 0 371 760 setcachedevice
q
371 760 m
371 685 l
285 685 l
253 685 230 678 218 665 c
205 652 199 629 199 595 c
199 547 l
347 547 l
347 477 l
199 477 l
199 0 l
109 0 l
109 477 l
23 477 l
23 547 l
109 547 l
109 585 l
109 645 123 690 151 718 c
179 746 224 760 286 760 c
371 760 l
h
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
h
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
h
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
h
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
h
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
h
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
h
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
h
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
h
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
h
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
h
f
Q
} def
/p {
635 0 91 -207 580 560 setcachedevice
q
181 82 m
181 -207 l
91 -207 l
91 547 l
181 547 l
181 464 l
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
h
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
h
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
h
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
h
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
h
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
h
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
h
f
Q
} def
/u {
634 0 85 -13 543 560 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
h
311 560 m
311 560 l
h
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
h
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 317 -13 c
235 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
h
f
Q
} def
end
currentdict end
/T3_15_0 exch definefont pop
%%EndResource
/F15_0 /T3_15_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 418.89501 310.85575 re
W
q
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 418.89501 310.85575 re
f
/DeviceGray {} CS
[0] SC
40.590625 37.54375 357.12 266.112 re
f
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
56.823352 37.54375 8.116364 6.181463 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
64.939716 37.54375 m
73.05608 37.54375 l
73.05608 37.54375 l
64.939716 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
73.05608 37.54375 m
81.172443 37.54375 l
81.172443 37.54375 l
73.05608 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
81.172443 37.54375 m
89.288807 37.54375 l
89.288807 37.54375 l
81.172443 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
89.288807 37.54375 m
97.40517 37.54375 l
97.40517 37.54375 l
89.288807 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
97.40517 37.54375 m
105.521534 37.54375 l
105.521534 37.54375 l
97.40517 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
105.521534 37.54375 m
113.637898 37.54375 l
113.637898 37.54375 l
105.521534 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
113.637898 37.54375 m
121.754261 37.54375 l
121.754261 37.54375 l
113.637898 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
121.754261 37.54375 m
129.870625 37.54375 l
129.870625 37.54375 l
121.754261 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
129.870625 37.54375 m
137.986989 37.54375 l
137.986989 37.54375 l
129.870625 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
137.986989 37.54375 m
146.103352 37.54375 l
146.103352 37.54375 l
137.986989 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
146.103352 37.54375 m
154.219716 37.54375 l
154.219716 37.54375 l
146.103352 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
154.219716 37.54375 m
162.33608 37.54375 l
162.33608 37.54375 l
154.219716 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
162.33608 37.54375 m
170.452443 37.54375 l
170.452443 37.54375 l
162.33608 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
170.452443 37.54375 m
178.568807 37.54375 l
178.568807 37.54375 l
170.452443 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
178.568807 37.54375 m
186.68517 37.54375 l
186.68517 37.54375 l
178.568807 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
186.68517 37.54375 m
194.801534 37.54375 l
194.801534 37.54375 l
186.68517 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
194.801534 37.54375 m
202.917898 37.54375 l
202.917898 37.54375 l
194.801534 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
202.917898 37.54375 m
211.034261 37.54375 l
211.034261 37.54375 l
202.917898 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
211.034261 37.54375 m
219.150625 37.54375 l
219.150625 37.54375 l
211.034261 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
219.150625 37.54375 m
227.266989 37.54375 l
227.266989 37.54375 l
219.150625 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
227.266989 37.54375 m
235.383352 37.54375 l
235.383352 37.54375 l
227.266989 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
235.383352 37.54375 m
243.499716 37.54375 l
243.499716 37.54375 l
235.383352 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
243.499716 37.54375 m
251.61608 37.54375 l
251.61608 37.54375 l
243.499716 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
251.61608 37.54375 m
259.732443 37.54375 l
259.732443 37.54375 l
251.61608 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
259.732443 37.54375 m
267.848807 37.54375 l
267.848807 37.54375 l
259.732443 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
267.848807 37.54375 8.116363 37.08878 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
275.96517 37.54375 8.116364 12.362927 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
284.081534 37.54375 m
292.197898 37.54375 l
292.197898 37.54375 l
284.081534 37.54375 l
h
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
292.197898 37.54375 8.116363 6.181463 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
300.314261 37.54375 8.116364 6.181463 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
308.430625 37.54375 8.116364 55.633171 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
316.546989 37.54375 8.116363 37.08878 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
324.663352 37.54375 8.116364 43.270244 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
332.779716 37.54375 8.116364 12.362927 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
340.89608 37.54375 8.116363 61.814634 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
349.012443 37.54375 8.116364 43.270244 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
357.128807 37.54375 8.116363 253.44 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
365.24517 37.54375 8.116364 222.532683 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
373.361534 37.54375 8.116364 154.536585 re
f
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
75.447536 37.54375 m
75.447536 303.65575 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
75.447536 37.54375 m
75.447536 34.04375 l
f
75.447536 37.54375 m
75.447536 34.04375 l
S
1 w
q
[1 0 0 1 56.369411 22.95] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(100000)
[6.36
0
6.36
0
6.36
0
6.36
0
6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
138.881406 37.54375 m
138.881406 303.65575 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
138.881406 37.54375 m
138.881406 34.04375 l
f
138.881406 37.54375 m
138.881406 34.04375 l
S
1 w
q
[1 0 0 1 119.803281 22.95] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(105000)
[6.36
0
6.36
0
6.36
0
6.36
0
6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
202.315276 37.54375 m
202.315276 303.65575 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
202.315276 37.54375 m
202.315276 34.04375 l
f
202.315276 37.54375 m
202.315276 34.04375 l
S
1 w
q
[1 0 0 1 183.237151 22.95] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(110000)
[6.36
0
6.36
0
6.36
0
6.36
0
6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
265.749146 37.54375 m
265.749146 303.65575 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
265.749146 37.54375 m
265.749146 34.04375 l
f
265.749146 37.54375 m
265.749146 34.04375 l
S
1 w
q
[1 0 0 1 246.671021 22.95] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(115000)
[6.36
0
6.36
0
6.36
0
6.36
0
6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
329.183015 37.54375 m
329.183015 303.65575 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
329.183015 37.54375 m
329.183015 34.04375 l
f
329.183015 37.54375 m
329.183015 34.04375 l
S
1 w
q
[1 0 0 1 310.10489 22.95] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(120000)
[6.36
0
6.36
0
6.36
0
6.36
0
6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
392.616885 37.54375 m
392.616885 303.65575 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
392.616885 37.54375 m
392.616885 34.04375 l
f
392.616885 37.54375 m
392.616885 34.04375 l
S
1 w
q
[1 0 0 1 373.53876 22.95] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(125000)
[6.36
0
6.36
0
6.36
0
6.36
0
6.36
0
6.36
0] Tj
Q
q
[1 0 0 1 177.463125 9.278125] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(points per frame)
[6.35
0
6.12
0
2.78
0
6.34
0
3.92
0
5.21
0
3.18
0
6.35
0
6.15
0
4.11
0
3.18
0
3.52
0
4.11
0
6.13
0
9.74
0
6.15
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 37.54375 m
397.710625 37.54375 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 37.54375 m
37.090625 37.54375 l
f
40.590625 37.54375 m
37.090625 37.54375 l
S
1 w
q
[1 0 0 1 27.23125 33.746875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(0)
[6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 68.451067 m
397.710625 68.451067 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 68.451067 m
37.090625 68.451067 l
f
40.590625 68.451067 m
37.090625 68.451067 l
S
1 w
q
[1 0 0 1 27.23125 64.654192] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(5)
[6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 99.358384 m
397.710625 99.358384 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 99.358384 m
37.090625 99.358384 l
f
40.590625 99.358384 m
37.090625 99.358384 l
S
1 w
q
[1 0 0 1 20.871875 95.561509] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(10)
[6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 130.265701 m
397.710625 130.265701 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 130.265701 m
37.090625 130.265701 l
f
40.590625 130.265701 m
37.090625 130.265701 l
S
1 w
q
[1 0 0 1 20.871875 126.468826] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(15)
[6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 161.173018 m
397.710625 161.173018 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 161.173018 m
37.090625 161.173018 l
f
40.590625 161.173018 m
37.090625 161.173018 l
S
1 w
q
[1 0 0 1 20.871875 157.376143] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(20)
[6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 192.080335 m
397.710625 192.080335 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 192.080335 m
37.090625 192.080335 l
f
40.590625 192.080335 m
37.090625 192.080335 l
S
1 w
q
[1 0 0 1 20.871875 188.28346] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(25)
[6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 222.987652 m
397.710625 222.987652 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 222.987652 m
37.090625 222.987652 l
f
40.590625 222.987652 m
37.090625 222.987652 l
S
1 w
q
[1 0 0 1 20.871875 219.190777] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(30)
[6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 253.89497 m
397.710625 253.89497 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 253.89497 m
37.090625 253.89497 l
f
40.590625 253.89497 m
37.090625 253.89497 l
S
1 w
q
[1 0 0 1 20.871875 250.098095] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(35)
[6.36
0
6.36
0] Tj
Q
Q
q
40.590625 37.54375 357.12 266.112 re
W
2 J
1 j
0.8 w
/DeviceGray {} CS
[0.6902] SC
/DeviceRGB {} cs
[0 0 0] sc
40.590625 284.802287 m
397.710625 284.802287 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
40.590625 284.802287 m
37.090625 284.802287 l
f
40.590625 284.802287 m
37.090625 284.802287 l
S
1 w
q
[1 0 0 1 20.871875 281.005412] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(40)
[6.36
0
6.36
0] Tj
Q
q
[0 1 -1 0 14.79375 125.631] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 10 Tf
(number of frames)
[6.34
0
6.34
0
9.74
0
6.35
0
6.15
0
4.11
0
3.18
0
6.12
0
3.52
0
3.18
0
3.52
0
4.11
0
6.13
0
9.74
0
6.15
0
5.21
0] Tj
Q
2 J
0 j
0.8 w
/DeviceRGB {} cs
[0 0 0] sc
40.590625 37.54375 m
40.590625 303.65575 l
S
397.710625 37.54375 m
397.710625 303.65575 l
S
40.590625 37.54375 m
397.710625 37.54375 l
S
40.590625 303.65575 m
397.710625 303.65575 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_15_0
%%EOF
